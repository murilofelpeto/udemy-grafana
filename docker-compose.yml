version: '3.4'

volumes:
  grafana_data: {}
  prometheus_data: {}

services:
  db:
    container_name: udemy_mysql
    image: mysql:5.7
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: test123
      MYSQL_PASSWORD: test123
      MYSQL_USER: user
    volumes:
      - ./mysql/init:/docker-entrypoint-initdb.d
      - ./mysql/configuration/my.cnf:/etc/mysql/conf.d/mysql.cnf
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-pipeline-stages: |
          - regex:
              expression: '(level|lvl|severity)=(?P<level>\w+)'
          - labels:
              level:
  adminer:
    container_name: udemy_adminer
    image: adminer:latest
    restart: always
    ports:
      - 8111:8080
  flyway:
    container_name: udemy_flyway
    image: flyway/flyway:7.5.2
    command: -url=jdbc:mysql://db -schemas=exampledb -user=root -password=test123 -connectRetries=60 migrate
    volumes:
      - ./flyway/migration/exampledb:/flyway/sql
    depends_on:
      - db
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-pipeline-stages: |
          - regex:
              expression: '(level|lvl|severity)=(?P<level>\w+)'
          - labels:
              level:
  grafana:
    container_name: udemy_grafana
    image: grafana/grafana-oss:8.2.4
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/dashes.yml:/etc/grafana/dashes.yml
      - ./grafana/provisioning/dashboard/mysql:/etc/grafana/provisioning/dashboards/mysql
      - ./grafana/provisioning/dashboard/loki:/etc/grafana/provisioning/dashboards/loki
      - ./grafana/provisioning/datasource:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    restart: unless-stopped
    network_mode: host
    labels:
      org.label-schema.group: "monitoring"
    expose:
      - 3000
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-pipeline-stages: |
          - regex:
              expression: '(level|lvl|severity)=(?P<level>\w+)'
          - labels:
              level:
  nginx:
    container_name: udemy_nginx
    image: nginx:latest
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    environment:
      NGINX_PORT: 80
      NGINX_HOST: 127.0.0.1
    network_mode: host
    expose:
      - 80
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-pipeline-stages: |
          - regex:
              expression: '(level|lvl|severity)=(?P<level>\w+)'
          - labels:
              level:
  loki:
    container_name: udemy_loki
    image: grafana/loki:2.5.0
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-pipeline-stages: |
          - regex:
              expression: '(level|lvl|severity)=(?P<level>\w+)'
          - labels:
              level:
  promtail:
    container_name: udemy_promtail
    image: grafana/promtail:2.5.0
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
  prometheus:
    container_name: udemy_prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.external-url=/prometheus/'
      - '--web.route-prefix=/'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    restart: always
    network_mode: host
    labels:
      org.label-schema.group: "monitoring"
  cadvisor:
    container_name: udemy_cadvisor
    image: gcr.io/cadvisor/cadvisor
    ports:
      - 8112:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
  nginx-exporter:
    container_name: udemy_nginx_exporter
    image: nginx/nginx-prometheus-exporter:latest
    network_mode: host
    expose:
      - 9113
    environment:
      - SCRAPE_URI=http://localhost:80/metrics
      - NGINX_RETRIES=10
  node-exporter:
    image: prom/node-exporter:latest
    container_name: udemy_node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    network_mode: host
